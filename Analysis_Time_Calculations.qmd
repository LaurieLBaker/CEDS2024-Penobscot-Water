---
title: "Linnea"
format: html
editor: visual
execute:
  echo: false
  warning: false
---

```{r install.packages, include=FALSE}
library(tidyverse)
library(quarto)
library(dplyr)
library(devtools)
library(readr)
library(gt) #for tables
library(stringr)
library(htmltools)
```

```{r load_data}
data2018 <- readRDS("data/PINCommEngData (2).RData")
```

```{r}
data2018$SampleDatetime <- (as.POSIXct(data2018$SampleDatetime, format = "%m/%d/%Y %H:%M:%S"))
data2018$LabAnalysisDatetime <- (as.POSIXct(data2018$LabAnalysisDatetime, format = "%m/%d/%Y %H:%M:%S"))
    
#separate_wider_delim(cols = HoldTimeMins, delim = "M", names() = "HoldTimeMinutes", #"HoldTime") %>%


data2018 %>%
  separate_longer_delim(cols = Constituents, delim = ";") %>%
  filter(SiteVisitID == "JanS5-2018925102747") %>%
  mutate(HoldTimeMins = as.numeric(lubridate::ymd_hms(LabAnalysisDatetime) - lubridate::ymd_hms(SampleDatetime))*60*24) %>%
   mutate(HoldTime = seconds_to_period(as.numeric(HoldTimeMins)*60)) %>%
   mutate(HoldTimeViol = case_when(Constituents == "Cond" ~ HoldTimeMins - 40320,
                                  Constituents == "Turb" ~ HoldTimeMins - 1440,
                                  Constituents == "ColA" ~ HoldTimeMins - 2880,
                                  Constituents == "TSS" ~ HoldTimeMins - 10080,
                                  Constituents == "EcoliIQT" ~ HoldTimeMins - 360,
                                  Constituents == "BOD" ~ HoldTimeMins - 360,
                                  Constituents == "TotP" ~ HoldTimeMins - 40320,
                                  Constituents == "Alk" ~ HoldTimeMins - 20160,
                                  Constituents == "ColT" ~ HoldTimeMins - 2880,
                                  Constituents == "ColiformIQT" ~ HoldTimeMins - 360,
                                  TRUE ~ NA
                                  )) %>%
 mutate(AnalysisTimeMins = as.numeric(lubridate::ymd_hms(LabAnalysisDatetime) - lubridate::mdy_hms(ProcessDateTime))*60*24) %>%
  filter(!is.na(ProcessDateTime)) %>%
  select(ProcessDateTime, AnalysisTimeMins, LabAnalysisDatetime)

data2018 %>%
  separate_longer_delim(cols = Constituents, delim = ";") %>%
  filter(SiteVisitID == "JanS5-2018925102747") %>%
  mutate(HoldTimeMins = as.numeric(lubridate::ymd_hms(LabAnalysisDatetime) - lubridate::ymd_hms(SampleDatetime))*60*24) %>%
   mutate(HoldTime = seconds_to_period(as.numeric(HoldTimeMins)*60)) %>%
   mutate(HoldTimeViol = case_when(Constituents == "Cond" ~ HoldTimeMins - 40320,
                                  Constituents == "Turb" ~ HoldTimeMins - 1440,
                                  Constituents == "ColA" ~ HoldTimeMins - 2880,
                                  Constituents == "TSS" ~ HoldTimeMins - 10080,
                                  Constituents == "EcoliIQT" ~ HoldTimeMins - 360,
                                  Constituents == "BOD" ~ HoldTimeMins - 360,
                                  Constituents == "TotP" ~ HoldTimeMins - 40320,
                                  Constituents == "Alk" ~ HoldTimeMins - 20160,
                                  Constituents == "ColT" ~ HoldTimeMins - 2880,
                                  Constituents == "ColiformIQT" ~ HoldTimeMins - 360,
                                  TRUE ~ NA
                                  )) %>%
 mutate(AnalysisTimeMins = as.numeric(lubridate::ymd_hms(LabAnalysisDatetime) - lubridate::mdy_hms(ProcessDateTime))*60*24) %>%
  #mutate(IncubationViol = case_when(Constituents == "EcoliTQT" ~))
  select(SiteCode, SampleDatetime, ResultValue, QCType, Constituents, ResultFlag_ID, IncubationLength, LabAnalysisDatetime, HoldTime, HoldTimeViol, AnalysisTimeMins) %>%
  distinct() %>% 
   rename("QC Type" = "QCType",
         "Qualifier Flag" = "ResultFlag_ID",
         "Incubation Time" = "IncubationLength",
         "Analysis Time" = "LabAnalysisDatetime",
         "Hold Time" = "HoldTime",
         "Site Code" = "SiteCode",
         "Sample Date/Time" = "SampleDatetime",
         "Result" = "ResultValue") %>%
  gt() %>%
  tab_style(
    style = cell_fill(color = "lightgreen"),
    locations = cells_body(columns = c(HoldTimeViol),
                           rows = grepl("-", HoldTimeViol, fixed=TRUE))) %>%
  tab_style(
    style = cell_fill(color = "red"),
    locations = cells_body(columns = c(HoldTimeViol),
                           rows = !grepl("-", HoldTimeViol, fixed=TRUE))) %>%
  cols_align(align = "center") %>%
   tab_style(
    style = cell_borders(
      sides = c("all"),
      color = "black",
      weight = px(1),
      style = "solid"),
    locations = list(cells_body(), cells_column_labels()))
  
```

```{r}
data2018$SampleDatetime <- as.POSIXct(data2018$SampleDatetime, format = "%m/%d/%Y %H:%M:%S")

data2018$Date <- as.Date(data2018$SampleDatetime)
data2018$Time <- format(data2018$SampleDatetime, format = "%H:%M:%S")


data2018 %>% 
  select(QCType, ProfileDepth,Const, Result, SiteVisitID) %>% 
  filter(Const %in% c("Dissolved Oxygen", "water temperature")) %>% 
  pivot_wider(names_from = c(Const, QCType),
              values_from = Result) %>%
  rename("water_temp_regular" = "water temperature_Regular",
         "water_temp_duplicate" = "water temperature_Duplicate",
         "DO_regular" = "Dissolved Oxygen_Regular",
         "DO_duplicate" = "Dissolved Oxygen_Duplicate") %>%
  mutate(water_temp_regular = as.character(water_temp_regular),
     water_temp_regular = replace_na(water_temp_regular, "-"),
  water_temp_duplicate = as.character(water_temp_duplicate),
    water_temp_duplicate = replace_na(water_temp_duplicate, "-"),
     DO_regular = as.character(DO_regular),
    DO_regular = replace_na(DO_regular, "-"),
        DO_duplicate = as.character(DO_duplicate),
    DO_duplicate = replace_na("DO_duplicate", "-")) %>%
    filter(SiteVisitID == "JanS7-201871875659") %>%
    select(!SiteVisitID) %>% 
  gt() %>% 
      opt_row_striping() %>%
   opt_interactive(use_sorting = TRUE, use_filters = TRUE, use_page_size_select = TRUE)
 
```

```{r}
HoldTime2 <- as.double(difftime(lubridate::ymd_hms(data2018$SampleDatetime),
                       lubridate::ymd_hms(data2018$LabAnalysisDatetime),
                       units = "secs"), na.rm = TRUE) %>%
  seconds_to_period()

#LabAnalysisDate <- as.Date(data2018$LabAnalysisDatetime)
#SampleCollectionDate <- as.Date(as.numeric(data2018$SampleDatetime)) %>%
  #is.na() %>%
  #format(SampleCollectionDate, "%Y-%m-%d")

#SampleCollectionDate <- as.numeric(data2018$SiteVisitStartTime)
#LabAnalysisDate <- as.numeric(data2018$LabAnalysisDatetime)


#HoldTime <- period("09-25-2018 10:41:09", "09-25-2018 10:29:07")

#date_1 = as.Date("2020-05-01") 
#date_2 = as.Date("2020-06-01")

#difftime(date_1, date_2, "days")

#HoldTime <- difftime(time1 = "2018-09-25 10:29:53", time2 = "2018-09-26 10:41:09", units = "mins")

#HoldTime <- period(data2018$SampleDatetime, data$LabAnalysisDatetime,"hours", na.rm = TRUE)

#period(c("2018-09-26 10:41:09", "9/25/2018 10:29:07"), c("day", "hour", "minute")) %>%
  #mutate(HoldTime = LabAnalysisDate - SampleCollectionDate) %>%

HoldTime <- as.double(difftime(lubridate::ymd_hms("2018-09-26 10:41:09"),
                   lubridate::ymd_hms("2018-09-25 10:29:53"),
                   units = "secs")) %>%
  seconds_to_period()
```
